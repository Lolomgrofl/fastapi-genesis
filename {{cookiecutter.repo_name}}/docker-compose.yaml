version: "3.9"

services:
  app:
    container_name: "{{ cookiecutter.app_container_name }}"
    # build: . for local dev you can use this option, for prod work you should take image from ECR
    image: your-ecr.amazonaws.com/some-repo:latest
    command: bash -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port {{ cookiecutter.app_service_port }} --reload"
    volumes:
      - .:/app
    ports:
      - "{{ cookiecutter.app_service_port }}:{{ cookiecutter.app_service_port }}"
    depends_on:
      - db
    restart: always
    networks:
      - "{{ cookiecutter.network_name }}"

  db:
    container_name: "{{ cookiecutter.db_container_name }}"
    image: postgres:latest
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "{{ cookiecutter.db_service_port }}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    env_file:
      - .env
    networks:
      - "{{ cookiecutter.network_name }}"

  pgadmin:
    container_name: "{{ cookiecutter.pgadmin_container_name }}"
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - "{{ cookiecutter.pgadmin_service_port }}:80"
    depends_on:
      - db
    restart: always
    env_file:
      - .env
    networks:
      - "{{ cookiecutter.network_name }}"

volumes:
  postgres_data:


networks:
  {{ cookiecutter.network_name }}:
    driver: bridge
